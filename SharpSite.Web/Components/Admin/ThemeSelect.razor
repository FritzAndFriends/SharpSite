@inject IPluginManager PluginManager
@inject IThemeManager ThemeManager
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(true))

@* generate a theme selector combobox based on the list of availablethemeplugins *@
<h3 id="site-appearance-title">@Localizer[SharedResource.sharpsite_theme_selector]</h3>
<select class="form-select" @bind="SelectedTheme" aria-labelledby="site-appearance-title">
	<option value="">@Localizer[SharedResource.sharpsite_theme_blank_option]</option>
	@foreach (var plugin in AvailableThemePlugins)
	{
		<option 
		value="@plugin.IdVersion">@plugin.DisplayName</option>
	}
</select>

<button class="btn btn-primary my-3" @onclick="ChangeTheme">Change Theme</button>

@code {

	IPluginManifest[] AvailableThemePlugins = Array.Empty<IPluginManifest>();

	string SelectedTheme = string.Empty;

	protected override void OnInitialized()
	{

		SelectedTheme = ThemeManager.CurrentState.CurrentTheme is not null ? ThemeManager.CurrentState.CurrentTheme.IdVersion : string.Empty;

		AvailableThemePlugins = ThemeManager.Themes.Values.ToArray();

		base.OnInitialized();
	}
	private async Task ChangeTheme()
	{

		if (string.IsNullOrWhiteSpace(SelectedTheme))
		{
			ThemeManager.CurrentState.CurrentTheme = null;
		}
		else
		{
			ThemeManager.SetTheme(AvailableThemePlugins.First(p => p.IdVersion == SelectedTheme));
		}
		await ThemeManager.SaveState();
		NavigationManager.NavigateTo("/admin", true);

	}
}
