@using Microsoft.AspNetCore.SignalR
@using Microsoft.Extensions.Options
@using System.ComponentModel.DataAnnotations
@inject IOptions<HubOptions> HubOptions
@inject IApplicationStateManager ApplicationStateManager
@inject IConfiguration Configuration
@rendermode @(new InteractiveServerRenderMode(true))

<AuthorizeView Roles="@Constants.Roles.Admin" Context="AuthorizeContext">
	<h3>
		@Localizer[SharedResource.sharpsite_sitesettings]</h3>

	<EditForm Model="Model">
		<DataAnnotationsValidator />

		<label for="maxsize">
			@Localizer[SharedResource.sharpsite_maxupload_label]</label>

		<InputNumber id="maxsize" @bind-Value="Model.MaxSizeMB" /> MB
		<p>
			<ValidationMessage For="@(() => Model.MaxSizeMB)" />
		</p>
		<button class="btn btn-primary" @onclick="ChangeMaxSize">@Localizer[SharedResource.sharpsite_save]</button>


	</EditForm>

</AuthorizeView>

@code {

	private ViewModel Model = new();

	protected override void OnInitialized()
	{
		Model.MaxSizeMB = HubOptions.Value.MaximumReceiveMessageSize / ViewModel.MB;
		base.OnInitialized();
	}

	private void ChangeMaxSize(MouseEventArgs e)
	{
		Configuration[ConfigurationSections.HubOptionsConfigurationSection + ":MaximumReceiveMessageSize"] = Model.MaximumReceiveMessageSize.ToString();

		HubOptions.Value.MaximumReceiveMessageSize = Model.MaximumReceiveMessageSize;
		ApplicationStateManager.CurrentState.MaximumUploadSizeMB = Model.MaxSizeMB;
		ApplicationStateManager.SaveState();
	}

	class ViewModel
	{
		[Range(1, 100), Required]
		public long? MaxSizeMB;

		public const long MB = 1024 * 1024;

		public const string Upload = "Upload";

		public long? MaximumReceiveMessageSize
		{
			get => MaxSizeMB * MB;
			set => MaximumReceiveMessageSize = MaxSizeMB * MB;
		}
	}
}