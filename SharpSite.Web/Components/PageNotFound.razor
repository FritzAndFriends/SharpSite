@using System.Net
@using Markdig
@inject ILogger<PageNotFound> Logger
@inject ApplicationState AppState


<PageTitle>@Localizer[SharedResource.sharpsite_pagenotfound]</PageTitle>

<h1>@Localizer[SharedResource.sharpsite_pagenotfound]</h1>

@if (string.IsNullOrEmpty(AppState.PageNotFoundContent))
{
	@if (!string.IsNullOrEmpty(PageRequested))
	{
		<p>@string.Format(Localizer[SharedResource.sharpsite_pagenotfound_withrequestedpage], PageRequested)</p>
	}
}
else
{
	@((MarkupString)Markdown.ToHtml(AppState.PageNotFoundContent))
}
<p><a href="/">@Localizer[SharedResource.sharpsite_backtohome]</a></p>

@code
{

	[CascadingParameter]
	public HttpContext? HttpContext { get; set; }

	[Parameter]
	public string? PageRequested { get; set; }

	protected override void OnInitialized()
	{
		if (HttpContext is not null)
			HttpContext.Response.StatusCode = (int)HttpStatusCode.NotFound;
		base.OnInitialized();
	}

	protected override void OnParametersSet()
	{
		Logger.LogError("Page {0} requested and not available", PageRequested);
		base.OnParametersSet();
	}


}