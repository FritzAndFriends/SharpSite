@page "/Error"
@using System.Diagnostics
@using System.Net
@using Microsoft.AspNetCore.Diagnostics

<PageTitle>Error</PageTitle>

@if (StatusCode == "404")
{
	<PageNotFound PageRequested="@OriginalUrlRequested" />
} else 
{
	<h1 class="text-danger">An error occurred while processing your request.</h1>
	<h2 class="text-danger">Please contact the site administrator.</h2>


	@if (ShowRequestId)
	{
		<p>
			<strong>Request ID:</strong> <code>@requestId</code>
		</p>
	}

	<h3>Development Mode</h3>
	<p>
		Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
	</p>
	<p>
		<strong>The Development environment shouldn't be enabled for deployed applications.</strong>
		It can result in displaying sensitive information from exceptions to end users.
		For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
		and restarting the app.
	</p>


}

@code {
	[CascadingParameter]
	public HttpContext? HttpContext { get; set; }

	[Parameter, SupplyParameterFromQuery]
	public string? StatusCode { get; set; }

	private string? requestId;
	private bool ShowRequestId => !string.IsNullOrEmpty(requestId);

	public string OriginalUrlRequested { get; set; } = string.Empty;

	protected override void OnInitialized()
	{
		requestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;

		if (HttpContext is not null) {
		 var feature = HttpContext.Features.Get<IStatusCodeReExecuteFeature>();
     OriginalUrlRequested = feature?.OriginalPath ?? string.Empty;
		}

	}
}
