@inject IPageRepository PageRepository

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">SharpSite</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill" aria-hidden="true"></span> @Localizer["sharpsite_home"]
            </NavLink>
        </div>

				@foreach (var p in Pages)
				{
						<div class="nav-item px-3">
								<NavLink class="nav-link" href="@($"/{p.Slug}")" Match="NavLinkMatch.All">
										<span class="bi bi-plus-square-fill" aria-hidden="true"></span> @p.Title
								</NavLink>
						</div>
				}

				@** insert a horizontal rule to separate the bottom two items in the menu*@
				<hr class="dropdown-divider" />

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/admin/posts" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill" aria-hidden="true"></span>@Localizer["sharpsite_postsadmin"]
            </NavLink>
        </div>

				<div class="nav-item px-3">
						<NavLink class="nav-link" href="/admin/pages" Match="NavLinkMatch.All">
								<span class="bi bi-house-door-fill" aria-hidden="true"></span>@Localizer["sharpsite_pageadmin"]
						</NavLink>
				</div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/aboutSharpSite" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill" aria-hidden="true"></span>@Localizer["sharpsite_about"]
            </NavLink>
        </div>
        <LanguagePicker />
    </nav>
</div>

@code {

	IEnumerable<Page> Pages { get; set; } = Enumerable.Empty<Page>();

	protected override async Task OnInitializedAsync()
	{
		Pages = await PageRepository.GetPages();
	}

}
