@attribute [Route(RouteValues.AdminPostList)]
@attribute [Authorize()]
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IPostRepository PostService


<PageTitle>@Localizer[SharedResource.sharpsite_postsadmin]</PageTitle>

<h1>@Localizer[SharedResource.sharpsite_postsadmin]</h1>

@if (Posts is null)
{
	<p><em>@Localizer[SharedResource.sharpsite_loading]</em></p>
}
else
{

	@** add a link to create a new post *@
	<a href="/admin/post">@Localizer[SharedResource.sharpsite_newpost]</a>
		

	@** use a quickgrid to format the list of posts with each posts title being a link to the editpost page for that post *@
	<QuickGrid Items="@GridPosts" style="width: 100%">
		<TemplateColumn Title="@Localizer[SharedResource.sharpsite_postlist_title]">
				<a href="@($"/admin/post{context.ToUrl()}")">@context.Title</a>
		</TemplateColumn>
		<PropertyColumn Property="@(p => p.PublishedDate.ToLocalTime())" 
			Format="g"
						Title="@Localizer[SharedResource.sharpsite_postlist_publisheddate]" />
	</QuickGrid>
}

@code {
		private IEnumerable<Post>? Posts { get; set; }

		private IQueryable<Post>? GridPosts => Posts?.AsQueryable();

		protected override async Task OnInitializedAsync()
		{
				Posts = await PostService.GetPosts();
		}
}